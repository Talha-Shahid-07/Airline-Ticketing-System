/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package airlineticketingsystem;

import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Talha Shahid
 */
public class UpdateFlightByNumber extends javax.swing.JFrame {

    /**
     * Creates new form UpdateFlight
     */
    public UpdateFlightByNumber() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        jTextField7 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblUpdate = new javax.swing.JLabel();
        txtFlightNumber = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblDepartureCity = new javax.swing.JLabel();
        lblArrivalCity = new javax.swing.JLabel();
        lblFlightClass = new javax.swing.JLabel();
        lblNumberOfSeats = new javax.swing.JLabel();
        lblDepartureDate = new javax.swing.JLabel();
        lblArrivalDate = new javax.swing.JLabel();
        txtDepartureCity = new javax.swing.JTextField();
        txtArrivalCity = new javax.swing.JTextField();
        txtFlightClass = new javax.swing.JTextField();
        txtDepartureDate = new javax.swing.JTextField();
        txtArrivalDate = new javax.swing.JTextField();
        txtNumberOfSeats = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnAvailableFlights = new javax.swing.JButton();

        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTextField7.setText("jTextField7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel1.setText("Update Flight");

        lblUpdate.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblUpdate.setForeground(new java.awt.Color(0, 0, 102));
        lblUpdate.setText("Enter Flight Number to Update");

        btnUpdate.setBackground(new java.awt.Color(45, 213, 171));
        btnUpdate.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblDepartureCity.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblDepartureCity.setForeground(new java.awt.Color(0, 0, 102));
        lblDepartureCity.setText("Update Departure City to");

        lblArrivalCity.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblArrivalCity.setForeground(new java.awt.Color(0, 0, 102));
        lblArrivalCity.setText("Update Arrival City to");

        lblFlightClass.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblFlightClass.setForeground(new java.awt.Color(0, 0, 102));
        lblFlightClass.setText("Update Flight Class to");

        lblNumberOfSeats.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblNumberOfSeats.setForeground(new java.awt.Color(0, 0, 102));
        lblNumberOfSeats.setText("Update Number of Seats to");

        lblDepartureDate.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblDepartureDate.setForeground(new java.awt.Color(0, 0, 102));
        lblDepartureDate.setText("Update Departure Date to");

        lblArrivalDate.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        lblArrivalDate.setForeground(new java.awt.Color(0, 0, 102));
        lblArrivalDate.setText("Update Arrival Date to");

        btnBack.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(102, 204, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAvailableFlights.setBackground(new java.awt.Color(45, 213, 171));
        btnAvailableFlights.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        btnAvailableFlights.setForeground(new java.awt.Color(255, 255, 255));
        btnAvailableFlights.setText("Show Available Flights");
        btnAvailableFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailableFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblUpdate)
                                        .addComponent(lblArrivalCity)
                                        .addComponent(lblFlightClass)
                                        .addComponent(lblArrivalDate)
                                        .addComponent(lblDepartureDate)
                                        .addComponent(lblDepartureCity)
                                        .addComponent(lblNumberOfSeats))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(34, 34, 34)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtArrivalCity, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                                    .addComponent(txtFlightClass))
                                                .addComponent(txtDepartureCity, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtArrivalDate, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                                .addComponent(txtNumberOfSeats)))))
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(171, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAvailableFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdate)
                    .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDepartureCity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(txtDepartureCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblArrivalCity)
                            .addComponent(txtArrivalCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFlightClass)
                            .addComponent(txtFlightClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDepartureDate)
                            .addComponent(txtDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblArrivalDate)
                            .addComponent(txtArrivalDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumberOfSeats)
                            .addComponent(txtNumberOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAvailableFlights)
                            .addComponent(btnUpdate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String flightNumber = txtFlightNumber.getText();
    String departureCity = txtDepartureCity.getText();
    String arrivalCity = txtArrivalCity.getText();
    String flightClass = txtFlightClass.getText();
    String departureDate = txtDepartureDate.getText();
    String arrivalDate = txtArrivalDate.getText();
    String numberOfSeatsStr = txtNumberOfSeats.getText();

    // Check if any fields are empty
    boolean isEmpty = false;
    String errorMessage = "Please fill in the following fields:\n";

    if (flightNumber.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Flight Number\n";
    }
    if (departureCity.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Departure City\n";
    }
    if (arrivalCity.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Arrival City\n";
    }
    if (flightClass.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Class\n";
    }
    if (departureDate.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Departure Date\n";
    }
    if (arrivalDate.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Arrival Date\n";
    }
    if (numberOfSeatsStr.isEmpty()) {
        isEmpty = true;
        errorMessage += "- Number of Seats\n";
    }

    // If any fields are empty, display an error message
    if (isEmpty) {
        JOptionPane.showMessageDialog(null, errorMessage);
    } else {

        // Establish connection to the database
        ConnectionToDB conn = new ConnectionToDB();
        Connection con = conn.EstablishConnection();

        SimpleDateFormat departureDateFormat = new SimpleDateFormat("MM/dd/yyyy");
        SimpleDateFormat returnDateFormat = new SimpleDateFormat("MM/dd/yyyy");
        try {
            // Convert number of seats to int
            int numberOfSeats = Integer.parseInt(numberOfSeatsStr);
            
            // Parse dates
            java.sql.Date parsedDepartureDate = new java.sql.Date(departureDateFormat.parse(departureDate).getTime());
            java.sql.Date parsedReturnDate = new java.sql.Date(returnDateFormat.parse(arrivalDate).getTime());

            // Prepare the SQL statement
            String query = "UPDATE flights SET departureCity=?, arrivalCity=?, flightClass=?, departureDate=?, returnDate=?, numberOfSeats=? WHERE flightNumber=?";
            PreparedStatement pstmt = con.prepareStatement(query);

            // Set the parameters for the prepared statement
            pstmt.setString(1, departureCity);
            pstmt.setString(2, arrivalCity);
            pstmt.setString(3, flightClass);
            pstmt.setDate(4, parsedDepartureDate);
            pstmt.setDate(5, parsedReturnDate);
            pstmt.setInt(6, numberOfSeats);
            pstmt.setString(7, flightNumber);

            // Execute the update
            int rowsAffected = pstmt.executeUpdate();

            // Check if the update was successful
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Flight information updated successfully.");
                AirlineDashboard dashboard = new AirlineDashboard();
                dashboard.setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Failed to update flight information.");
            }

            // Close the PreparedStatement and Connection
            pstmt.close();
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        } catch (ParseException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Invalid date format. Please use MM/dd/yyyy.");
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter a valid Number");
        }
    }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        AirlineDashboard dashboard = new AirlineDashboard();
        dashboard.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAvailableFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailableFlightsActionPerformed
        AvailableFlights flights = new AvailableFlights();
        flights.setVisible(true);
    }//GEN-LAST:event_btnAvailableFlightsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailableFlights;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JLabel lblArrivalCity;
    private javax.swing.JLabel lblArrivalDate;
    private javax.swing.JLabel lblDepartureCity;
    private javax.swing.JLabel lblDepartureDate;
    private javax.swing.JLabel lblFlightClass;
    private javax.swing.JLabel lblNumberOfSeats;
    private javax.swing.JLabel lblUpdate;
    private javax.swing.JTextField txtArrivalCity;
    private javax.swing.JTextField txtArrivalDate;
    private javax.swing.JTextField txtDepartureCity;
    private javax.swing.JTextField txtDepartureDate;
    private javax.swing.JTextField txtFlightClass;
    private javax.swing.JTextField txtFlightNumber;
    private javax.swing.JTextField txtNumberOfSeats;
    // End of variables declaration//GEN-END:variables
}
