/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package airlineticketingsystem;

//import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.String;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

class AddFlightClass {

    ConnectionToDB conn = new ConnectionToDB();
    Connection con = conn.EstablishConnection();
    Statement stmt = null;

    public boolean addFlight(String flightNumber, String type, String departureCity, String arrivalCity, String flightClass, String priceOfTickets, String departureDate, String returnDate, String numberOfSeats, String company) {

        {

            SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");

            try {
                // Parse dates
                java.sql.Date parsedDepartureDate = new java.sql.Date(dateFormat.parse(departureDate).getTime());
                java.sql.Date parsedReturnDate = new java.sql.Date(dateFormat.parse(returnDate).getTime());

                // Prepare the SQL statement
                String query = "INSERT INTO flights (flightNumber, type, departureCity, arrivalCity, flightClass, priceOfTicket, departureDate, returnDate, numberOfSeats, company) "
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement pstmt = con.prepareStatement(query);

                // Set the parameters for the prepared statement
                pstmt.setString(1, flightNumber);
                pstmt.setString(2, type);
                pstmt.setString(3, departureCity);
                pstmt.setString(4, arrivalCity);
                pstmt.setString(5, flightClass);
                pstmt.setString(6, priceOfTickets);
                pstmt.setDate(7, parsedDepartureDate);
                pstmt.setDate(8, parsedReturnDate);
                pstmt.setString(9, numberOfSeats);
                pstmt.setString(10, company);

                // Execute the update
                int rowsAffected = pstmt.executeUpdate();

                // Check if the update was successful
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Flight added to database successfully.");
                    return true;
                } else {
                    JOptionPane.showMessageDialog(null, "Error adding flight to the database.");
                    return false;
                }

            } catch (SQLException ex) {
                System.out.println("SQL Error: " + ex.getMessage());
                JOptionPane.showMessageDialog(null, "Database error occurred.");
                return false;
            } catch (ParseException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Invalid date format. Please use MM/dd/yyyy.");
                return false;
            }
        }

    }
}

public class AddFlight extends javax.swing.JFrame {

    /**
     * Creates new form FlightRegistrationForm
     */
    public AddFlight() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDepartureDate1 = new javax.swing.JTextField();
        lblFlightReg = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblFN = new javax.swing.JLabel();
        txtFlightNumber = new javax.swing.JTextField();
        lblFN1 = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        lblDC = new javax.swing.JLabel();
        txtDepartureCity = new javax.swing.JTextField();
        lblAC = new javax.swing.JLabel();
        txtArrivalCity = new javax.swing.JTextField();
        lblDD = new javax.swing.JLabel();
        txtDepartureDate = new javax.swing.JTextField();
        lblC = new javax.swing.JLabel();
        txtClass = new javax.swing.JTextField();
        lblRD = new javax.swing.JLabel();
        txtReturnDate = new javax.swing.JTextField();
        lblPriceOfTickets = new javax.swing.JLabel();
        txtPriceOfTickets = new javax.swing.JTextField();
        lblNOS = new javax.swing.JLabel();
        txtNumberOfSeats = new javax.swing.JTextField();
        lblCompany = new javax.swing.JLabel();
        txtCompany = new javax.swing.JTextField();
        btnAddFlight = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFlightReg.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblFlightReg.setForeground(new java.awt.Color(0, 0, 102));
        lblFlightReg.setText("Flight Registration Form");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblFN.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblFN.setForeground(new java.awt.Color(0, 0, 102));
        lblFN.setText("Flight Number:");

        lblFN1.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblFN1.setForeground(new java.awt.Color(0, 0, 102));
        lblFN1.setText("Type:");

        lblDC.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblDC.setForeground(new java.awt.Color(0, 0, 102));
        lblDC.setText("Departure City:");

        txtDepartureCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartureCityActionPerformed(evt);
            }
        });

        lblAC.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblAC.setForeground(new java.awt.Color(0, 0, 102));
        lblAC.setText("Arrival City:");

        txtArrivalCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArrivalCityActionPerformed(evt);
            }
        });

        lblDD.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblDD.setForeground(new java.awt.Color(0, 0, 102));
        lblDD.setText("Departure Date:");

        txtDepartureDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartureDateActionPerformed(evt);
            }
        });

        lblC.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblC.setForeground(new java.awt.Color(0, 0, 102));
        lblC.setText("Class:");

        txtClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassActionPerformed(evt);
            }
        });

        lblRD.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblRD.setForeground(new java.awt.Color(0, 0, 102));
        lblRD.setText("Return Date:");

        txtReturnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReturnDateActionPerformed(evt);
            }
        });

        lblPriceOfTickets.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblPriceOfTickets.setForeground(new java.awt.Color(0, 0, 102));
        lblPriceOfTickets.setText("Price of Tickets ($)");

        txtPriceOfTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceOfTicketsActionPerformed(evt);
            }
        });

        lblNOS.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblNOS.setForeground(new java.awt.Color(0, 0, 102));
        lblNOS.setText("Number of Seats:");

        lblCompany.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        lblCompany.setForeground(new java.awt.Color(0, 0, 102));
        lblCompany.setText("Company:");

        btnAddFlight.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        btnAddFlight.setForeground(new java.awt.Color(102, 204, 255));
        btnAddFlight.setText("Add");
        btnAddFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPriceOfTickets)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addComponent(lblCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblNOS, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPriceOfTickets)
                            .addComponent(txtNumberOfSeats)
                            .addComponent(txtCompany)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRD, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDC, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addComponent(lblFN))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(63, 63, 63)
                                            .addComponent(lblFN1)))
                                    .addComponent(lblDD, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(lblC, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDepartureDate, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addComponent(txtClass, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addComponent(txtReturnDate, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addComponent(txtArrivalCity)
                            .addComponent(txtDepartureCity)
                            .addComponent(txtType)
                            .addComponent(txtFlightNumber))))
                .addGap(94, 94, 94))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFN)
                    .addComponent(txtFlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFN1)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDC)
                    .addComponent(txtDepartureCity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblAC))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtArrivalCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDD)
                    .addComponent(txtDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblC)
                    .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRD)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPriceOfTickets)
                    .addComponent(txtPriceOfTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNOS, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumberOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCompany))
                .addGap(43, 43, 43)
                .addComponent(btnAddFlight)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(lblFlightReg))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblFlightReg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFlightActionPerformed

        // Get text from all fields
        String flightNumber = txtFlightNumber.getText();
        String type = txtType.getText();
        String departureCity = txtDepartureCity.getText();
        String arrivalCity = txtArrivalCity.getText();
        String flightClass = txtClass.getText();
        String priceOfTickets = txtPriceOfTickets.getText();
        String departureDate = txtDepartureDate.getText();
        String returnDate = txtReturnDate.getText();
        String numberOfSeats = txtNumberOfSeats.getText();
        String company = txtCompany.getText();

        // Check if any fields are empty
        boolean isEmpty = false;
        String errorMessage = "Please fill in the following fields:\n";

        if (flightNumber.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Flight Number\n";
        }
        if (type.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Type\n";
        }
        if (departureCity.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Departure City\n";
        }
        if (arrivalCity.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Arrival City\n";
        }
        if (flightClass.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Class\n";
        }
        if (priceOfTickets.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Price of Tickets\n";
        }
        if (departureDate.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Departure Date\n";
        }
        if (returnDate.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Return Date\n";
        }
        if (numberOfSeats.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Number of Seats\n";
        }
        if (company.isEmpty()) {
            isEmpty = true;
            errorMessage += "- Company\n";
        }

//        try {
//
//            int checkFlightNumber = Integer.parseInt(txtFlightNumber.getText());
//
//        } catch (NumberFormatException e) {
//
//            JOptionPane.showMessageDialog(null, "Invalid input! Please enter a valid integer for the flight number.");
//        }

        // If any fields are empty, display an error message
        if (isEmpty) {
            JOptionPane.showMessageDialog(null, errorMessage);
        } else {

            AddFlightClass addFlight = new AddFlightClass();
            if (addFlight.addFlight(flightNumber, type, departureCity, arrivalCity, flightClass, priceOfTickets, departureDate, returnDate, numberOfSeats, company)) {
                // Clear fields if successful
                txtFlightNumber.setText("");
                txtType.setText("");
                txtDepartureCity.setText("");
                txtArrivalCity.setText("");
                txtClass.setText("");
                txtPriceOfTickets.setText("");
                txtDepartureDate.setText("");
                txtReturnDate.setText("");
                txtNumberOfSeats.setText("");
                txtCompany.setText("");
            } else {
                // Handle potential errors returned by AddFlightClass (optional)
            }
        }

    }//GEN-LAST:event_btnAddFlightActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        AirlineDashboard dashboard = new AirlineDashboard();
        dashboard.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtDepartureDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartureDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartureDateActionPerformed

    private void txtArrivalCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArrivalCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtArrivalCityActionPerformed

    private void txtDepartureCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartureCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartureCityActionPerformed

    private void txtReturnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReturnDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReturnDateActionPerformed

    private void txtClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassActionPerformed

    private void txtPriceOfTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceOfTicketsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceOfTicketsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAddFlight;
    private javax.swing.JButton btnBack;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAC;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblDC;
    private javax.swing.JLabel lblDD;
    private javax.swing.JLabel lblFN;
    private javax.swing.JLabel lblFN1;
    private javax.swing.JLabel lblFlightReg;
    private javax.swing.JLabel lblNOS;
    private javax.swing.JLabel lblPriceOfTickets;
    private javax.swing.JLabel lblRD;
    private javax.swing.JTextField txtArrivalCity;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtDepartureCity;
    private javax.swing.JTextField txtDepartureDate;
    private javax.swing.JTextField txtDepartureDate1;
    private javax.swing.JTextField txtFlightNumber;
    private javax.swing.JTextField txtNumberOfSeats;
    private javax.swing.JTextField txtPriceOfTickets;
    private javax.swing.JTextField txtReturnDate;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
